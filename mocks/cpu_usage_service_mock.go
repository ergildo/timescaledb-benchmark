// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/service/cpu_usage_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	model "timescaledb-benchmark-assignment/internal/domain/model"

	gomock "github.com/golang/mock/gomock"
)

// MockCpuUsageService is a mock of CpuUsageService interface.
type MockCpuUsageService struct {
	ctrl     *gomock.Controller
	recorder *MockCpuUsageServiceMockRecorder
}

// MockCpuUsageServiceMockRecorder is the mock recorder for MockCpuUsageService.
type MockCpuUsageServiceMockRecorder struct {
	mock *MockCpuUsageService
}

// NewMockCpuUsageService creates a new mock instance.
func NewMockCpuUsageService(ctrl *gomock.Controller) *MockCpuUsageService {
	mock := &MockCpuUsageService{ctrl: ctrl}
	mock.recorder = &MockCpuUsageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCpuUsageService) EXPECT() *MockCpuUsageServiceMockRecorder {
	return m.recorder
}

// SearchByParams mocks base method.
func (m *MockCpuUsageService) SearchByParams(queryParam *model.QueryParam) (*model.CpuUsage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchByParams", queryParam)
	ret0, _ := ret[0].(*model.CpuUsage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchByParams indicates an expected call of SearchByParams.
func (mr *MockCpuUsageServiceMockRecorder) SearchByParams(queryParam interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchByParams", reflect.TypeOf((*MockCpuUsageService)(nil).SearchByParams), queryParam)
}
